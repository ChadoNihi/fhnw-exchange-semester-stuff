{"paragraphs":[{"title":"Import CSV into a Spark DataFrame","text":"val inputFilePath = \"/Users/netzwerg/Projects/fhnw-ivis-docs/src/docs/asciidoc/2017/02-data-exploration/data/persons.csv\"\nval df = spark.read\n    .format(\"csv\")\n    .option(\"header\", \"true\")\n    .option(\"inferSchema\", \"true\")\n    .csv(inputFilePath)\ndf.show","dateUpdated":"2017-02-26T08:30:47+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ninputFilePath: String = /Users/netzwerg/Projects/fhnw-ivis-docs/src/docs/asciidoc/2017/02-data-exploration/data/persons.csv\n\ndf: org.apache.spark.sql.DataFrame = [Index: int, First Name: string ... 6 more fields]\n+-----+----------+------------+-------------+------+------+----------+----------+\n|Index|First Name|   Last Name|Date Of Birth|Height|Weight|Shirt Size|Hair Color|\n+-----+----------+------------+-------------+------+------+----------+----------+\n|    1|   Raphael|  Blumenthal|   07.12.1929|   179|    95|         M|    Blonde|\n|    2|      Dany|         Bär|   03.06.1985|   181|    93|         M|     Black|\n|    3|   Candice|     Schaich|   26.02.1991|   171|    74|         M|     Black|\n|    4|   Janosch|      Schick|   11.07.1935|   165|    73|         S|       Red|\n|    5|   Alessio|       Weber|   30.07.1965|   178|    80|         M|      Grey|\n|    6|  Kreshnik|        Süss|   22.02.1971|   189|    89|         L|    Blonde|\n|    7|      Edon|      Fisler|   06.10.1957|   175|    83|         M|     Black|\n|    8|      Vera| Gambacciani|   04.12.1952|   169|    66|         M|      Grey|\n|    9|    Clelia|       Jordi|   04.08.1927|   180|    90|         M|    Blonde|\n|   10|   Arbnora|Züst-Gericke|   02.09.1955|   174|    82|         M|     Brown|\n|   11|      Mael|     Sigrist|   25.11.1991|   166|    75|         S|      Grey|\n|   12|     Sinan|       Speck|   05.01.1908|   173|    74|         M|    Blonde|\n|   13|     Artan|  Barmettler|   01.05.1973|   174|    69|         M|     Brown|\n|   14|     Roman|     Horváth|   21.10.1932|   168|    68|         M|    Blonde|\n|   15|    Dafina|     Stählin|   02.05.1978|   167|    77|         S|      Grey|\n|   16|     Tessa|     Seitler|   02.06.1939|   177|    91|         M|     Brown|\n|   17|  Michaela|     Walpoth|   10.01.1912|   185|    80|         L|      Grey|\n|   18|     Leila|    Spengler|   26.04.1939|   186|    96|         L|      Grey|\n|   19|  Valentin|  Rothenfluh|   30.11.1952|   160|    61|         S|    Blonde|\n|   20|    Victor|    Beytekin|   05.01.1926|   157|    79|         S|       Red|\n+-----+----------+------------+-------------+------+------+----------+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1488094192953_-813406728","id":"20170121-062833_1740659208","dateCreated":"2017-02-26T08:29:52+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3629","user":"anonymous","dateFinished":"2017-02-26T08:30:50+0100","dateStarted":"2017-02-26T08:30:48+0100"},{"text":"%md\n#### DataFrames provide a domain-specific language for structured data manipulation\n\nSpark 2.0 Documentation: [Link](http://spark.apache.org/docs/2.0.0/sql-programming-guide.html#untyped-dataset-operations-aka-dataframe-operations)","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>DataFrames provide a domain-specific language for structured data manipulation</h4>\n<p>Spark 2.0 Documentation: <a href=\"http://spark.apache.org/docs/2.0.0/sql-programming-guide.html#untyped-dataset-operations-aka-dataframe-operations\">Link</a></p>\n"}]},"apps":[],"jobName":"paragraph_1488094192953_-813406728","id":"20170121-071351_661457217","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3630"},{"title":"DataFrames provide a domain-specific language for structured data manipulation","text":"df.select(\"First Name\").show()","dateUpdated":"2017-02-26T08:31:01+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+\n|First Name|\n+----------+\n|   Raphael|\n|      Dany|\n|   Candice|\n|   Janosch|\n|   Alessio|\n|  Kreshnik|\n|      Edon|\n|      Vera|\n|    Clelia|\n|   Arbnora|\n|      Mael|\n|     Sinan|\n|     Artan|\n|     Roman|\n|    Dafina|\n|     Tessa|\n|  Michaela|\n|     Leila|\n|  Valentin|\n|    Victor|\n+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1488094192954_-812252481","id":"20170121-070658_9222058","dateCreated":"2017-02-26T08:29:52+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3631","user":"anonymous","dateFinished":"2017-02-26T08:31:02+0100","dateStarted":"2017-02-26T08:31:01+0100"},{"text":"df.select(\"Height\").describe().show()","dateUpdated":"2017-02-26T08:31:18+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----------------+\n|summary|           Height|\n+-------+-----------------+\n|  count|             1000|\n|   mean|          174.096|\n| stddev|6.914520561441315|\n|    min|              154|\n|    max|              196|\n+-------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1488094192954_-812252481","id":"20170123-090243_1923558815","dateCreated":"2017-02-26T08:29:52+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3632","user":"anonymous","dateFinished":"2017-02-26T08:31:19+0100","dateStarted":"2017-02-26T08:31:18+0100"},{"text":"df.filter(df(\"Height\") > 190).show()","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+------------+-------------+------+------+----------+----------+\n|First Name|   Last Name|Date Of Birth|Height|Weight|Shirt Size|Hair Color|\n+----------+------------+-------------+------+------+----------+----------+\n|    Svenja|       Manni|   28.04.1922|   192|    84|         L|       Red|\n|     Amira| Spilimbergo|   25.12.1966|   196|    96|         L|     Brown|\n|    Saskia|      Nestel|   14.08.1939|   192|   106|         L|     Brown|\n|     Levin|   Haselbach|   13.10.1976|   193|   102|         L|     Brown|\n|    Coline|Lenggenhager|   24.02.1967|   191|   116|         L|     Brown|\n|  Giovanni|     Obrecht|   03.02.1922|   191|    94|         L|     Brown|\n|       Nik|      Koller|   15.05.1935|   193|   120|         L|       Red|\n|    Janina|    Röhricht|   15.04.1953|   192|    85|         L|    Blonde|\n|     Boris|     Kleisli|   08.07.1904|   195|    99|         L|    Blonde|\n+----------+------------+-------------+------+------+----------+----------+\n\n"}]},"apps":[],"jobName":"paragraph_1488094192954_-812252481","id":"20170121-070726_864673478","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3633"},{"text":"df.groupBy(\"Shirt Size\").count().show()","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+-----+\n|Shirt Size|count|\n+----------+-----+\n|         M|  720|\n|         L|  110|\n|         S|  170|\n+----------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1488094192955_-812637230","id":"20170121-070809_168625768","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3634"},{"title":"Visualization via ZeppelinContext","text":"z.show(df.groupBy(\"Shirt Size\").count())","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"Shirt Size","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Shirt Size","index":0,"aggr":"sum"},"yAxis":{"name":"count","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Shirt Size\tcount\nM\t720\nL\t110\nS\t170\n"}]},"apps":[],"jobName":"paragraph_1488094192955_-812637230","id":"20170121-072305_1251148445","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3635"},{"title":"DataFrame statistic functions","text":"val r = df.stat.corr(\"Height\", \"Weight\")","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nr: Double = 0.5665461020232813\n"}]},"apps":[],"jobName":"paragraph_1488094192955_-812637230","id":"20170123-090957_938169509","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3636"},{"text":"z.show(df.select(\"Height\",\"Weight\"))\n","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"keys":[{"name":"Height","index":0,"aggr":"sum"}],"values":[{"name":"Weight","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Height","index":0,"aggr":"sum"},"yAxis":{"name":"Weight","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Height\tWeight\n179\t95\n181\t93\n171\t74\n165\t73\n178\t80\n189\t89\n175\t83\n169\t66\n180\t90\n174\t82\n166\t75\n173\t74\n174\t69\n168\t68\n167\t77\n177\t91\n185\t80\n186\t96\n160\t61\n157\t79\n177\t78\n178\t75\n165\t60\n176\t73\n192\t84\n164\t73\n179\t105\n172\t76\n169\t75\n168\t75\n170\t85\n170\t83\n172\t95\n170\t71\n171\t81\n174\t80\n178\t64\n165\t70\n174\t80\n180\t73\n178\t84\n171\t77\n172\t75\n186\t93\n161\t83\n172\t82\n168\t50\n170\t63\n179\t82\n180\t82\n174\t79\n182\t87\n167\t62\n185\t91\n167\t73\n170\t65\n167\t77\n180\t86\n180\t82\n179\t83\n173\t93\n181\t90\n172\t60\n167\t75\n178\t88\n157\t65\n169\t81\n168\t71\n168\t80\n189\t79\n182\t72\n174\t71\n187\t102\n175\t79\n166\t76\n169\t84\n179\t88\n171\t71\n168\t66\n155\t68\n169\t69\n170\t80\n167\t77\n174\t71\n174\t76\n173\t78\n169\t79\n173\t78\n180\t81\n170\t68\n166\t68\n182\t94\n170\t93\n175\t65\n168\t75\n180\t65\n168\t68\n179\t93\n172\t61\n170\t71\n165\t69\n178\t78\n177\t88\n177\t78\n160\t61\n186\t89\n162\t60\n174\t78\n176\t70\n170\t83\n159\t61\n179\t72\n161\t64\n173\t71\n178\t88\n161\t61\n168\t88\n170\t82\n176\t86\n171\t75\n167\t84\n178\t92\n173\t98\n183\t78\n175\t73\n167\t66\n178\t71\n179\t72\n168\t71\n161\t70\n165\t69\n175\t69\n171\t63\n170\t66\n171\t77\n165\t79\n181\t100\n167\t65\n168\t67\n170\t61\n167\t76\n168\t72\n169\t77\n166\t64\n164\t79\n174\t81\n179\t90\n178\t63\n180\t80\n171\t75\n174\t90\n165\t55\n172\t75\n180\t74\n178\t83\n179\t87\n176\t69\n175\t85\n176\t85\n174\t70\n175\t81\n177\t76\n167\t73\n181\t82\n190\t79\n187\t87\n167\t61\n167\t73\n172\t97\n176\t96\n178\t83\n178\t66\n168\t63\n187\t96\n175\t78\n183\t86\n172\t87\n174\t97\n178\t89\n159\t58\n185\t80\n188\t110\n169\t69\n167\t81\n176\t70\n182\t86\n168\t69\n176\t85\n170\t100\n165\t64\n170\t77\n178\t78\n179\t93\n176\t72\n172\t66\n162\t56\n171\t77\n172\t73\n168\t90\n166\t74\n174\t85\n178\t75\n188\t91\n183\t101\n173\t86\n178\t82\n178\t106\n182\t98\n174\t75\n177\t74\n180\t89\n170\t71\n162\t62\n173\t74\n188\t84\n159\t60\n177\t84\n167\t76\n174\t84\n178\t80\n172\t67\n179\t88\n180\t84\n182\t89\n180\t88\n180\t79\n186\t95\n173\t68\n168\t56\n171\t71\n168\t80\n176\t63\n175\t65\n171\t76\n165\t62\n171\t86\n173\t87\n180\t74\n165\t72\n172\t85\n185\t79\n176\t91\n181\t99\n164\t62\n170\t63\n177\t92\n169\t79\n171\t75\n167\t79\n167\t67\n181\t66\n168\t72\n183\t96\n170\t83\n183\t84\n177\t79\n168\t83\n169\t64\n174\t76\n181\t83\n184\t78\n180\t67\n160\t65\n176\t89\n181\t108\n169\t84\n176\t83\n196\t96\n178\t76\n167\t84\n176\t82\n174\t61\n176\t63\n178\t88\n179\t93\n165\t72\n174\t58\n172\t74\n178\t86\n182\t71\n185\t99\n167\t86\n177\t91\n168\t61\n173\t93\n177\t94\n182\t80\n177\t94\n174\t84\n173\t71\n180\t87\n178\t67\n171\t65\n171\t66\n179\t75\n168\t68\n165\t77\n192\t106\n187\t86\n181\t71\n179\t84\n181\t73\n173\t79\n170\t72\n169\t95\n169\t75\n174\t93\n179\t73\n181\t92\n167\t80\n160\t57\n162\t74\n170\t91\n178\t105\n165\t67\n172\t68\n174\t90\n171\t75\n173\t71\n176\t79\n180\t97\n176\t67\n175\t74\n170\t59\n166\t82\n177\t94\n163\t69\n185\t83\n168\t66\n166\t54\n193\t102\n169\t69\n178\t81\n172\t77\n178\t87\n158\t81\n177\t91\n172\t77\n167\t65\n174\t80\n174\t69\n174\t72\n170\t63\n166\t80\n168\t76\n176\t83\n168\t78\n166\t63\n175\t86\n169\t85\n173\t92\n176\t93\n182\t84\n174\t59\n174\t74\n176\t77\n166\t66\n180\t90\n170\t72\n183\t95\n178\t71\n172\t76\n172\t90\n170\t75\n172\t69\n174\t79\n176\t78\n175\t83\n177\t68\n179\t84\n168\t75\n164\t60\n189\t87\n168\t69\n179\t59\n161\t63\n183\t79\n167\t77\n168\t82\n168\t67\n177\t74\n165\t75\n180\t73\n165\t71\n185\t94\n188\t93\n181\t90\n176\t77\n184\t74\n172\t63\n167\t68\n183\t99\n172\t93\n167\t75\n178\t73\n186\t86\n169\t74\n169\t72\n163\t80\n167\t75\n168\t69\n176\t79\n177\t78\n182\t85\n169\t69\n179\t82\n164\t71\n173\t61\n179\t84\n174\t88\n180\t93\n171\t75\n166\t65\n171\t77\n154\t64\n174\t77\n168\t73\n167\t76\n179\t74\n168\t65\n171\t69\n177\t72\n175\t75\n170\t90\n159\t61\n181\t93\n176\t70\n167\t55\n168\t75\n180\t75\n168\t81\n184\t85\n169\t66\n190\t71\n186\t100\n170\t57\n171\t55\n178\t78\n179\t78\n166\t71\n174\t83\n174\t75\n165\t50\n179\t88\n186\t87\n174\t85\n166\t69\n171\t65\n169\t52\n169\t81\n165\t57\n181\t86\n170\t87\n189\t86\n184\t85\n178\t81\n167\t72\n177\t65\n178\t72\n170\t75\n177\t71\n169\t80\n170\t73\n165\t60\n181\t77\n168\t57\n160\t67\n161\t65\n185\t83\n168\t68\n175\t74\n174\t70\n183\t83\n172\t71\n185\t98\n178\t82\n175\t97\n178\t78\n180\t89\n169\t68\n156\t55\n163\t67\n166\t78\n186\t100\n168\t82\n175\t83\n184\t79\n171\t81\n176\t84\n176\t73\n169\t79\n169\t76\n180\t84\n179\t82\n176\t77\n171\t79\n175\t82\n174\t92\n179\t80\n175\t83\n180\t90\n173\t84\n164\t69\n184\t66\n182\t69\n170\t65\n178\t87\n176\t80\n187\t92\n176\t62\n165\t77\n173\t81\n166\t79\n169\t73\n172\t73\n168\t77\n175\t81\n169\t83\n191\t116\n179\t78\n174\t74\n173\t82\n178\t70\n178\t87\n178\t71\n174\t81\n177\t83\n181\t86\n162\t65\n167\t71\n178\t82\n184\t74\n178\t88\n185\t99\n172\t81\n181\t89\n169\t83\n166\t76\n181\t103\n181\t84\n176\t61\n179\t81\n178\t106\n179\t78\n178\t83\n179\t94\n182\t81\n175\t66\n174\t79\n183\t94\n170\t88\n184\t86\n178\t87\n169\t79\n157\t68\n170\t82\n175\t84\n170\t66\n179\t66\n170\t90\n174\t76\n177\t97\n175\t81\n175\t100\n169\t62\n180\t81\n175\t87\n162\t63\n177\t81\n174\t67\n164\t70\n161\t72\n178\t82\n168\t71\n171\t89\n172\t83\n174\t68\n167\t67\n175\t74\n169\t64\n162\t82\n167\t60\n163\t51\n178\t82\n179\t99\n171\t69\n163\t61\n165\t68\n169\t74\n164\t62\n168\t70\n181\t103\n167\t84\n158\t66\n169\t66\n184\t85\n173\t89\n184\t84\n184\t98\n172\t89\n179\t86\n168\t75\n183\t69\n180\t69\n175\t88\n176\t91\n182\t73\n173\t74\n172\t83\n182\t64\n178\t77\n174\t76\n181\t87\n168\t73\n178\t92\n169\t83\n173\t65\n182\t89\n179\t89\n162\t78\n173\t83\n173\t85\n181\t101\n176\t81\n161\t70\n179\t81\n172\t76\n169\t81\n170\t83\n161\t55\n167\t68\n175\t76\n179\t91\n177\t76\n175\t78\n177\t90\n184\t92\n181\t85\n177\t84\n188\t75\n178\t83\n177\t95\n171\t71\n155\t57\n184\t63\n175\t89\n191\t94\n171\t60\n188\t87\n167\t78\n174\t83\n179\t62\n183\t84\n180\t90\n178\t76\n163\t76\n174\t73\n175\t71\n170\t79\n175\t87\n183\t81\n180\t76\n173\t66\n186\t92\n176\t74\n172\t70\n179\t68\n167\t66\n185\t104\n174\t82\n182\t92\n171\t78\n185\t82\n176\t73\n172\t71\n165\t59\n176\t64\n176\t76\n160\t75\n174\t75\n179\t70\n177\t73\n173\t78\n158\t67\n171\t60\n176\t86\n180\t87\n179\t89\n179\t77\n174\t76\n168\t87\n175\t87\n177\t84\n168\t87\n162\t53\n177\t76\n168\t86\n174\t89\n166\t66\n175\t85\n170\t77\n171\t74\n185\t77\n168\t67\n181\t90\n175\t73\n166\t84\n172\t78\n180\t97\n163\t55\n165\t58\n180\t91\n190\t115\n171\t80\n175\t66\n174\t77\n177\t78\n174\t88\n183\t90\n181\t97\n169\t65\n190\t97\n163\t60\n177\t83\n183\t89\n175\t68\n188\t100\n163\t81\n168\t77\n171\t74\n176\t78\n181\t76\n176\t86\n176\t77\n169\t76\n175\t92\n172\t79\n193\t120\n166\t59\n174\t84\n179\t95\n174\t80\n174\t86\n179\t76\n170\t59\n184\t66\n163\t58\n169\t67\n172\t85\n163\t76\n174\t75\n173\t76\n179\t94\n185\t92\n176\t89\n185\t82\n187\t71\n184\t79\n172\t82\n172\t72\n180\t98\n175\t67\n174\t88\n175\t89\n189\t108\n174\t67\n170\t85\n181\t84\n177\t66\n182\t87\n175\t79\n163\t67\n174\t71\n169\t70\n171\t67\n174\t71\n170\t67\n177\t76\n182\t87\n192\t85\n179\t77\n179\t82\n181\t102\n183\t67\n179\t77\n174\t82\n181\t96\n181\t66\n163\t69\n162\t57\n185\t90\n174\t61\n173\t82\n165\t67\n178\t84\n169\t60\n178\t98\n183\t90\n177\t89\n175\t75\n171\t76\n160\t58\n178\t92\n171\t86\n176\t81\n177\t86\n173\t68\n172\t74\n173\t78\n186\t93\n174\t83\n179\t89\n165\t79\n177\t77\n172\t87\n176\t84\n184\t97\n165\t78\n166\t72\n170\t73\n179\t72\n170\t74\n176\t98\n173\t72\n174\t76\n168\t86\n181\t81\n181\t78\n170\t75\n177\t92\n172\t65\n182\t99\n178\t85\n165\t66\n178\t62\n195\t99\n162\t73\n172\t67\n174\t81\n167\t69\n173\t70\n176\t75\n172\t72\n178\t69\n180\t70\n176\t68\n174\t74\n175\t92\n170\t70\n173\t65\n176\t85\n178\t73\n163\t59\n181\t75\n167\t64\n173\t83\n172\t75\n173\t72\n177\t72\n182\t80\n177\t76\n173\t72\n183\t89\n174\t84\n174\t82\n174\t90\n168\t66\n169\t86\n177\t86\n185\t92\n167\t71\n172\t76\n183\t93\n177\t63\n174\t63\n187\t89\n179\t81\n165\t70\n184\t99\n189\t89\n178\t68\n160\t73\n174\t66\n176\t80\n187\t89\n179\t89\n172\t62\n170\t74\n172\t72\n182\t87\n163\t56\n186\t83\n170\t60\n174\t73\n173\t69\n183\t85\n185\t79\n179\t90\n168\t71\n160\t60\n177\t70\n164\t79\n181\t82\n184\t88\n173\t86\n171\t63\n181\t85\n176\t75\n182\t100\n179\t85\n177\t78\n179\t77\n172\t80\n173\t72\n177\t83\n179\t69\n167\t69\n177\t84\n177\t90\n170\t67\n172\t57\n174\t61\n155\t68\n172\t65\n172\t64\n182\t84\n185\t70\n186\t86\n180\t70\n177\t81\n177\t64\n173\t71\n175\t91\n159\t72\n181\t74\n165\t76\n171\t84\n180\t81\n164\t57\n185\t80\n167\t56\n176\t62\n181\t104\n178\t82\n173\t76\n174\t73\n179\t74\n175\t78\n183\t105\n174\t78\n165\t73\n177\t86\n174\t81\n169\t79\n183\t89\n165\t67\n183\t90\n177\t93\n176\t79\n177\t79\n166\t69\n172\t66\n178\t101\n173\t85\n180\t73\n174\t80\n174\t82\n172\t69\n173\t77\n167\t67\n174\t74\n187\t79\n177\t86\n173\t80\n163\t72\n167\t83\n185\t73\n169\t75\n168\t68\n169\t75\n169\t85\n178\t60\n186\t76\n172\t74\n182\t81\n168\t72\n169\t63\n179\t65\n168\t69\n160\t64\n166\t75\n163\t67\n179\t63\n174\t92\n178\t74\n177\t98\n168\t60\n164\t65\n166\t66\n156\t63\n"}]},"apps":[],"jobName":"paragraph_1488094192955_-812637230","id":"20170123-084533_290790181","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3637"},{"title":"Running SQL Queries","text":"%md Register our DataFrame as a temporary SQL view","dateUpdated":"2017-02-26T08:29:52+0100","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Register our DataFrame as a temporary SQL view</p>\n"}]},"apps":[],"jobName":"paragraph_1488094192956_-814560975","id":"20170121-063031_673009461","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3638"},{"text":"df.createOrReplaceTempView(\"persons\")","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1488094192956_-814560975","id":"20170121-071823_1760964080","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3639"},{"text":"%sql select `Last Name` from persons limit 5","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":[{"graph":{"mode":"table","height":300,"optionOpen":true,"keys":[{"name":"Last Name","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"Last Name","index":0,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Last Name\nBlumenthal\nBär\nSchaich\nSchick\nWeber\n"}]},"apps":[],"jobName":"paragraph_1488094192957_-814945724","id":"20170121-063452_1028755709","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3640"},{"text":"z.put(\"inputFilePath\", inputFilePath)","user":"anonymous","dateUpdated":"2017-02-26T08:34:27+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488094374762_630215473","id":"20170226-083254_1730920435","dateCreated":"2017-02-26T08:32:54+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4996","dateFinished":"2017-02-26T08:34:27+0100","dateStarted":"2017-02-26T08:34:27+0100","results":{"code":"SUCCESS","msg":[]}},{"title":"Import via Python Pandas (`pip install pandas` first)","text":"%pyspark\nimport pandas as pd\ninputFilePath = z.get(\"inputFilePath\")\nz.show(pd.read_csv(inputFilePath))","dateUpdated":"2017-02-26T08:34:12+0100","config":{"lineNumbers":false,"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"     Index First Name                       Last Name Date Of Birth  Height  \\\n0        1    Raphael                      Blumenthal    07.12.1929     179   \n1        2       Dany                             Bär    03.06.1985     181   \n2        3    Candice                         Schaich    26.02.1991     171   \n3        4    Janosch                          Schick    11.07.1935     165   \n4        5    Alessio                           Weber    30.07.1965     178   \n5        6   Kreshnik                            Süss    22.02.1971     189   \n6        7       Edon                          Fisler    06.10.1957     175   \n7        8       Vera                     Gambacciani    04.12.1952     169   \n8        9     Clelia                           Jordi    04.08.1927     180   \n9       10    Arbnora                    Züst-Gericke    02.09.1955     174   \n10      11       Mael                         Sigrist    25.11.1991     166   \n11      12      Sinan                           Speck    05.01.1908     173   \n12      13      Artan                      Barmettler    01.05.1973     174   \n13      14      Roman                         Horváth    21.10.1932     168   \n14      15     Dafina                         Stählin    02.05.1978     167   \n15      16      Tessa                         Seitler    02.06.1939     177   \n16      17   Michaela                         Walpoth    10.01.1912     185   \n17      18      Leila                        Spengler    26.04.1939     186   \n18      19   Valentin                      Rothenfluh    30.11.1952     160   \n19      20     Victor                        Beytekin    05.01.1926     157   \n20      21   Cheyenne                    Hohmann Maey    03.02.1925     177   \n21      22    Laurane                          Bienek    09.05.1914     178   \n22      23        Dan                         Teodoru    10.04.1977     165   \n23      24      Yohan                        Kirstein    22.07.1963     176   \n24      25     Svenja                           Manni    28.04.1922     192   \n25      26      Ardit                         Seitler    15.09.1978     164   \n26      27    Kerstin                          Sauter    24.02.1917     179   \n27      28      Paola                         Wobmann    25.06.1959     172   \n28      29    Leotrim                           Jenny    24.01.1969     169   \n29      30      Lazar                          Züllig    11.09.1958     168   \n..     ...        ...                             ...           ...     ...   \n970    971    Timothy                         Schoder    22.07.1996     174   \n971    972     Jovana                  Nikolic Singer    01.04.1954     187   \n972    973        Liv            Güntensperger-Alioth    27.04.1951     177   \n973    974      Arian  Santos Quadrio Neves-Demiroglu    30.10.1973     173   \n974    975       Yvan                         Schwarz    14.02.1921     163   \n975    976  Andrijana                      Barbadimos    07.02.1964     167   \n976    977      Serge                           Düsel    28.01.1942     185   \n977    978     Mladen                         Brunner    12.09.1953     169   \n978    979        Tim                       Tappeiner    14.01.1912     168   \n979    980     Nadège                          Egloff    20.05.1961     169   \n980    981      Tania                        Bielmann    31.05.1990     169   \n981    982    Leandra                       Gitermann    31.03.1909     178   \n982    983   Fabrizio                        Reichlin    11.11.1903     186   \n983    984       Emma                         Capraro    27.10.1969     172   \n984    985     Pietro                          Schaub    12.07.1951     182   \n985    986     Cornel                    Müller Rusch    10.03.1927     168   \n986    987        Urs                   Zschokke-Gohl    13.05.1947     169   \n987    988      Nenad                       Kleinhans    09.08.1918     179   \n988    989     Arbnor                      Salvisberg    16.09.1956     168   \n989    990    Olivier                          Bollag    10.04.1934     160   \n990    991     Didier                            Loup    27.01.1943     166   \n991    992     Gioele                           Meuli    17.01.1952     163   \n992    993      Anouk               Weber Andenmatten    05.05.1912     179   \n993    994     Monika                            Otth    08.11.1939     174   \n994    995  Anna-Lena                           Brack    03.02.1970     178   \n995    996      Kenza                       Maloberti    27.10.1917     177   \n996    997     Lilian                     Dübendorfer    04.07.1901     168   \n997    998     Arbnor                 Yetergil Kiefer    16.05.1976     164   \n998    999      Clara                          Wernli    27.03.1912     166   \n999   1000       Dani                          Herger    16.07.1929     156   \n\n     Weight Shirt Size Hair Color  \n0        95          M     Blonde  \n1        93          M      Black  \n2        74          M      Black  \n3        73          S        Red  \n4        80          M       Grey  \n5        89          L     Blonde  \n6        83          M      Black  \n7        66          M       Grey  \n8        90          M     Blonde  \n9        82          M      Brown  \n10       75          S       Grey  \n11       74          M     Blonde  \n12       69          M      Brown  \n13       68          M     Blonde  \n14       77          S       Grey  \n15       91          M      Brown  \n16       80          L       Grey  \n17       96          L       Grey  \n18       61          S     Blonde  \n19       79          S        Red  \n20       78          M      Brown  \n21       75          M       Grey  \n22       60          S       Grey  \n23       73          M       Grey  \n24       84          L        Red  \n25       73          S     Blonde  \n26      105          M      Black  \n27       76          M     Blonde  \n28       75          M      Black  \n29       75          M      Brown  \n..      ...        ...        ...  \n970      74          M      Brown  \n971      79          L      Black  \n972      86          M      Black  \n973      80          M      Black  \n974      72          S       Grey  \n975      83          S      Black  \n976      73          L     Blonde  \n977      75          M     Blonde  \n978      68          M        Red  \n979      75          M      Black  \n980      85          M       Grey  \n981      60          M        Red  \n982      76          L       Grey  \n983      74          M      Brown  \n984      81          M     Blonde  \n985      72          M      Brown  \n986      63          M      Black  \n987      65          M      Brown  \n988      69          M       Grey  \n989      64          S     Blonde  \n990      75          S       Grey  \n991      67          S        Red  \n992      63          M      Brown  \n993      92          M        Red  \n994      74          M        Red  \n995      98          M      Brown  \n996      60          M        Red  \n997      65          S      Brown  \n998      66          S       Grey  \n999      63          S        Red  \n\n[1000 rows x 8 columns]\n"}]},"apps":[],"jobName":"paragraph_1488094192957_-814945724","id":"20170121-065205_883661393","dateCreated":"2017-02-26T08:29:52+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3641","user":"anonymous","dateFinished":"2017-02-26T08:34:12+0100","dateStarted":"2017-02-26T08:34:12+0100"},{"text":"","dateUpdated":"2017-02-26T08:29:52+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1488094192959_-814176226","id":"20170121-074841_1045607845","dateCreated":"2017-02-26T08:29:52+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3642"}],"name":"Persons","id":"2C9XCFWDX","angularObjects":{"2C9T5SAU7:shared_process":[],"2CC13GHYP:shared_process":[],"2CCCTV7PE:shared_process":[],"2CCR7X9DB:shared_process":[],"2CCSR962F:shared_process":[],"2CBD4F6CX:shared_process":[],"2CAGGARRM:shared_process":[],"2CANBHVRG:shared_process":[],"2CAD3VPVT:shared_process":[],"2C9A3J3GF:shared_process":[],"2CCFPDV94:shared_process":[],"2CBN7N6ZD:shared_process":[],"2CA2PERNK:shared_process":[],"2C9UWRZAJ:shared_process":[],"2CCGZSGV6:shared_process":[],"2CBG6NS7V:shared_process":[],"2C941WMX3:shared_process":[],"2C915M87C:shared_process":[],"2CB47E2N8:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}